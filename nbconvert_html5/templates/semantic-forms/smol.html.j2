{%- extends 'semantic-forms/cell.html.j2' -%}

{% from 'mathjax.html.j2' import mathjax %}
{% from 'jupyter_widgets.html.j2' import jupyter_widgets %}

{% block css %}
<meta name="color-scheme" content="dark light">

<style>
    {# use the system ui and a larger font #}
    body {
        font-size: larger;
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
    }

    {# use flex to display the main area. each cell will be arranged according to the flex display, grid could be used instead. using flex generates new interactive elements when horizontal or vertical scroll is required. #}

    /** focus **/
    section:focus-within {
        border: 2px solid;
    }

    section:hover {
        outline: 2px dashed;
        outline-offset: -3px; {# border offset plus a half #}
    }

    /** layout **/
    fieldset[name=input]:disabled~ul[role=toolbar],
    form[action=markdown]+section>fieldset[name=input]:disabled,
    form[action=markdown]+section>fieldset[name=input]:disabled~fieldset[name=outputs] legend {
        display: none;
    }

    main {
        display: flex;
        overflow-x: hidden;
        flex-direction: column;
    }

    main>section {
        display: flex;
        flex-direction: column;
        align-items: stretch;
        gap: 1rem 1rem;
    }

    main>section>fieldset[name=input],
    main>section.markdown>fieldset[name=outputs] {
        border: none;
        display: flex;
        flex-direction: row;
    }

    textarea[name=source], fieldset[name$=put]>output {
        width: 100%;
    }

    main>section {
        overflow-x: auto;
    }

    /** fix the color constrast on disabled textareas **/
    fieldset[name=input]:disabled>textarea {
        color: unset;
    }

    /** skip links **/
    .visually-hidden:not(:focus):not(:active) {
        clip: rect(0 0 0 0);
        clip-path: inset(50%);
        height: 1px;
        overflow: hidden;
        position: absolute;
        white-space: nowrap;
        width: 1px;
    }
</style>{% endblock css %}
{% block any_cell scoped %}
{%- set count = nb["cells"].index(cell)-%}{%- set ID = "/cells/" + str(count) -%}
{%- set CODE = cell.cell_type == "code" -%}
{%- set tags = celltags(cell) -%}
<form hidden id="{{ID}}" name="{{ID}}" method="POST" action="{{cell.cell_type}}">
    <label id={{ID}}/cell_count>Cell&nbsp;<output name="cell_count" role="presentation">{{count + 1}}</output></label>
</form>
<section aria-labelledby="{{ID}}/cell_count" class="cell {{cell.cell_type}}{% if tags %} {{tags}}{% endif %}" id="{{count}}">
    <fieldset name=input role=presentation disabled>
        <legend hidden id="{{ID}}/input_count">In&nbsp;<output name="input_count" role="presentation">{{cell.execution_count or ""}}</output></legend>
        <label aria-hidden=true>In&nbsp;<output name="input_count"  role="presentation">{{cell.execution_count or ""}}</output></label>
        <textarea name="source" id="{{ID}}/source" rows="{{cell.source.splitlines().__len__()}}" form="{{ID}}" aria-labelledby="{{ID}}/input_count">{{cell.source}}</textarea>
    </fieldset>
    {# things need to follow this input in dom order so that we can use css selectors off fieldset:disabled #}
    {{ cell_toolbars(cell, nb, [cell_submit(cell, nb), cell_type(cell, nb)]) }}
    {{ cell_output(cell, nb) }}
</section>
{% endblock any_cell %}


{%- macro cell_submit(cell, nb) -%}
{%- set count = nb["cells"].index(cell)-%}{%- set ID = "/cells/" + str(count) -%}
{# https://www.w3.org/TR/WCAG20-TECHS/H32.html #}
<button form="{{ID}}" type="submit" disabled aria-label="Run Cell"></button>
{%- endmacro -%}

{%- macro cell_toolbars(cell, nb, body) -%}
{%- set count = nb["cells"].index(cell)-%}{%- set ID = "/cells/" + str(count) -%}
<ul role="toolbar" aria-labelledby="{{ID}}/execution_count">{%- for part in body -%}<li>{{part}}</li>{%- endfor -%}</ul>
{%- endmacro -%}

{%- macro cell_type(cell, nb) -%}
{%- set count = nb["cells"].index(cell)-%}{%- set ID = "/cells/" + str(count) -%}
{%- set cell_type = cell.cell_type -%}
<select name="cell_type" aria-label="Cell Type" form="{{ID}}" disabled>
    <option {% if cell_type=="code" %}selected{% endif %} value="code">code</option>
    <option {% if cell_type=="markdown" %}selected{% endif %} value="markdown">markdown</option>
    <option {% if cell_type=="raw" %}selected{% endif %} value="raw">raw</option>
    <option {% if cell_type=="unknown" %}selected{% endif %} value="unknown">unknown</option>
</select>
{%- endmacro -%}


{%- macro cell_output(cell, nb, parts) -%}
{%- set count = nb["cells"].index(cell)-%}{%- set ID = "/cells/" + str(count) -%}
{% set CODE = cell.cell_type == "code" %}

<fieldset name="outputs" id="{{ID}}/outputs" {% if CODE and not cell.outputs %}hidden{% endif %} {% if not CODE %}role="presentation"{% endif %}>
    <legend id={{ID}}/execution_count>Out&nbsp;<output name="execution_count"  role="presentation">{{cell.execution_count or ""}}</output></legend>
    {{cell_display_priority(cell, ID)}}
    {% if cell.cell_type=="markdown" %}
    <output role="presentation" class="render" form={{ID}} aria-labelledby="{{ID}}/execution_count">
    {{markdown(cell.source) | strip_files_prefix}}
    </output>
    {% endif %}
</fieldset>
{%- endmacro -%}

{%- macro cell_display_priority(cell, ID) -%}
{%- for i, output in enumerate(cell.outputs) -%}
{%- block output scoped -%}{%- block output_prompt -%}{%- endblock-%}{{super()}}{%- endblock -%}
{%- endfor -%}
{%- endmacro -%}

