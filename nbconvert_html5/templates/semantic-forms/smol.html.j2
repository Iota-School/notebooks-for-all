{%- extends 'semantic-forms/cell.html.j2' -%}



{# cell is a tough analogy, it is an ambiguous signifier dependent on context.
the analogy to a biologic cell asks "what is the nucleus?" or "what encodes the objective?".
the source input feels like it is the irreducible element of our computational cells.
lines of text evolve over time. like dna they replicate, mutate, evolve, and cooperate.

allied alphabets dancing on carefully organized sand emitting waves of sound, light, and hope.
the lines in the source, the nucleus, freeze a sliver of a movement in hypermedia.

#}
{% from 'mathjax.html.j2' import mathjax %}
{% from 'jupyter_widgets.html.j2' import jupyter_widgets %}

{% block css %}
<meta name="color-scheme" content="dark light">

<style>
    {# use the system ui and a larger font #}
    body {
        font-size: larger;
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
    }

    {# use flex to display the main area. each cell will be arranged according to the flex display, grid could be used instead. using flex generates new interactive elements when horizontal or vertical scroll is required. #}
    main {
        display: flex;
        overflow-x: hidden;
        flex-direction: column;
    }

    {# cells have labels #}
    output[name=cell_count]:before {
        content: "Cell ";
    }

    output[name=input_count]:before {
        content: "In ";
    }
    
    {# computational cells have extra labels #}
    output[name=execution_count]:before {
        content: "Out ";
    }


    section:focus-within {
        border: 2px solid;
    }
    section:hover {
        outline: 2px dashed;
        outline-offset: -3px; {# border offset plus a half #}
    }

    {#  #}
    
    section > form,
    fieldset[name=input]:disabled~ul[role=toolbar], 
    section.markdown>fieldset[name=input]:disabled,
    section.markdown>fieldset[name=input]:disabled ~ fieldset[name=outputs] legend,
    section.markdown output[name$=_count] {
        display: none;
    }

    textarea[name=source]:disabled {
        color: inherit;
    }

    textarea[name=source], fieldset[name$=put]>output {
        width: 100%;
    }

    output[name$=_count] {
        font-family: monospace;
    }

    main>section {
        display: flex;
        flex-direction: column;
        align-items: stretch;
        gap: 1rem 1rem;
    }

    main>section>fieldset[name=input],
    main>section.markdown>fieldset[name=outputs] {
        border: none;
        display: flex;
        flex-direction: row;
    }

    main>section {
        overflow-x: auto;
    }

    .visually-hidden:not(:focus):not(:active) {
        clip: rect(0 0 0 0);
        clip-path: inset(50%);
        height: 1px;
        overflow: hidden;
        position: absolute;
        white-space: nowrap;
        width: 1px;
    }
</style>{% endblock css %}
{% block any_cell scoped %}
{%- set count = nb["cells"].index(cell)-%}{%- set ID = "/cells/" + str(count) -%}
{%- set CODE = cell.cell_type == "code" -%}
{%- set tags = celltags(cell) -%}
<section aria-labelledby="{{ID}}/cell_count" class="cell {{cell.cell_type}}{% if tags %} {{tags}}{% endif %}" id="{{count}}">
    <form id="{{ID}}" name="{{ID}}" method="POST">
        <output name="cell_count" role="presentation" id={{ID}}/cell_count>{{count + 1}}</output>
    </form>
    <fieldset name=input role=presentation disabled>
        <legend>
            <output name="input_count" role="presentation">{{cell.execution_count or ""}}</output>
        </legend>
        <label for="{{ID}}/source">{# https://www.w3.org/WAI/WCAG21/Techniques/general/G208 #}Source</label>
        <textarea name="source" id="{{ID}}/source" rows="{{cell.source.splitlines().__len__()}}" form="{{ID}}">{{cell.source}}</textarea>
    </fieldset>
    {{ cell_toolbars(cell, nb, [cell_submit(cell, nb), cell_type(cell, nb)]) }}
    {{ cell_output(cell, nb) }}
</section>
{% endblock any_cell %}


{# cell is a tough analogy, it is an ambiguous signifier dependent on context.
the analogy to a biologic cell asks "what is the nucleus?" or "what encodes the objective?".
the source input feels like it is the irreducible element of our computational cells.
lines of text evolve over time. like dna they replicate, mutate, evolve, and cooperate.

allied alphabets dancing on carefully organized sand emitting waves of sound, light, and hope.
the lines in the source, the nucleus, freeze a sliver of a movement in hypermedia.

#}
{%- macro cell_textarea(cell, nb) -%}
{%- set count = nb["cells"].index(cell)-%}{%- set ID = "/cells/" + str(count) -%}
<label for="{{ID}}/source">{# https://www.w3.org/WAI/WCAG21/Techniques/general/G208 #}
</label>
<textarea name="source" id="{{ID}}/source" rows="{{cell.source.splitlines().__len__()}}" form="{{ID}}" readonly>{{cell.source}}</textarea>
{%- endmacro -%}

{%- macro cell_form_element(cell, nb) -%}
{%- set count = nb["cells"].index(cell)-%}{%- set ID = "/cells/" + str(count) -%}
{%- endmacro -%}

{%- macro cell_submit(cell, nb) -%}
{%- set count = nb["cells"].index(cell)-%}{%- set ID = "/cells/" + str(count) -%}
{# https://www.w3.org/TR/WCAG20-TECHS/H32.html #}
<button form="{{ID}}" type="submit" disabled aria-label="Run Cell"></button>
{%- endmacro -%}

{%- macro cell_toolbars(cell, nb, body) -%}
{%- set count = nb["cells"].index(cell)-%}{%- set ID = "/cells/" + str(count) -%}
<ul role="toolbar" aria-labelledby="{{ID}}/execution_count">{%- for part in body -%}<li>{{part}}</li>{%- endfor -%}</ul>
{%- endmacro -%}

{%- macro cell_type(cell, nb) -%}
{%- set count = nb["cells"].index(cell)-%}{%- set ID = "/cells/" + str(count) -%}
{%- set cell_type = cell.cell_type -%}
<select name="cell_type" aria-label="Cell Type" form="{{ID}}" disabled>
    <option {% if cell_type=="code" %}selected{% endif %} value="code">code</option>
    <option {% if cell_type=="markdown" %}selected{% endif %} value="markdown">markdown</option>
    <option {% if cell_type=="raw" %}selected{% endif %} value="raw">raw</option>
    <option {% if cell_type=="unknown" %}selected{% endif %} value="unknown">unknown</option>
</select>
{%- endmacro -%}

{# the execution count has been one of the most confusing aspects of this journey.
it's meaning wasn't revealed until the very end of this rigorous study.
the result discovered labelable, interactive elements that describe the components of the cell.
assistive technology requires labels for interactive objects and the semantic representation allows the re-use
of the execution count label on different elements with different roles.
#}
{%- macro cell_out(cell, nb, body) -%}
{%- set count = nb["cells"].index(cell)-%}{%- set ID = "/cells/" + str(count) -%}
{% if cell.cell_type == "code" %}
<output name="execution_count" id={{ID}}/execution_count role="presentation">{{cell.execution_count or ""}}</output>
{% else %}
<output role="presentation">{{count}}</output>
{% endif %}
{%- endmacro -%}


{%- macro cell_in(cell, nb, body) -%}
{%- set count = nb["cells"].index(cell)-%}{%- set ID = "/cells/" + str(count) -%}
<output name="cell_count" role="presentation" id={{ID}}/cell_count>{{count + 1}}</output>
{%- endmacro -%}

{%- macro cell_output(cell, nb, parts) -%}
{%- set count = nb["cells"].index(cell)-%}{%- set ID = "/cells/" + str(count) -%}
{% set CODE = cell.cell_type == "code" %}

<fieldset name="outputs" id="{{ID}}/outputs" {% if CODE and not cell.outputs %}style="display: none;"{% endif %}>
    <legend>
        <output name="execution_count" id={{ID}}/execution_count role="presentation">{{cell.execution_count or ""}}</output>
    </legend>
    {{cell_display_priority(cell, ID)}}
    {% if cell.cell_type=="markdown" %}
    <output role="presentation" class="render" form={{ID}} aria-labelledby="{{ID}}/execution_count">
    {{markdown(cell.source) | strip_files_prefix}}
    </output>
    {% endif %}
</fieldset>
{%- endmacro -%}

{%- macro cell_display_priority(cell, ID) -%}
{%- for i, output in enumerate(cell.outputs) -%}
{%- block output scoped -%}<output role="presentation" name="outputs/{{i}}" id="{{ID}}/outputs/{{i}}" form="{{ID}}" aria-labelledby="{{ID}}/execution_count">{%- block output_prompt -%}{%- endblock
    -%}{{super()}}</output>{%- endblock -%}
{%- endfor -%}
{%- endmacro -%}


{%- macro highlight(body, type) -%}
{{markdown("```{{type}}\n" + json.dumps(nb.metadata, indent=2) + "\n```\n")}}
{%- endmacro -%}