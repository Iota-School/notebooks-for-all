/* @import url('https://fonts.googleapis.com/css2?family=Atkinson+Hyperlegible&display=swap'); */
body {
    /* prefer system fonts https://css-tricks.com/snippets/css/system-font-stack/ */
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
    font-size: 1.25em;
}

/* we need to visually hide content that may have focus */
.visually-hidden:not(:focus):not(:active) {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
}

.tip {
    display: none;
}

summary:focus .tip {
    display: inline-block;
}

textarea {
    font-family: monospace;
}

@media (prefers-color-scheme: dark) {
    main>header details.toc {
        background-color: black;
    }
}

main>header {
    display: grid;
    grid-template-areas: "toc";
    overflow: auto;
    opacity: .9;
    position: sticky;
    top: 0;
    max-height: 100vh;
}

main>header details.toc {
    grid-area: toc;
}

body>header details.site {
    grid-area: site;
}

@media (prefers-color-scheme: light) {
    main>header details.toc {
        background-color: white;
    }
}

@media screen and (min-width: 768px) {
    main>header {
        overflow: auto;
        grid-template-columns: auto 50%;
        grid-template-areas: ". toc";
    }

}

table.cells thead {
    display: none;
}

thead tr.cell {
    visibility: collapse;
}

.static td.execution_count label:not(:empty):before {
    content: "In: ";
}

table#cells {
    /* table-layout: fixed; */
    width: 100%;
}

tr.cell {
    display: grid;
}


tr.code.cell {
    grid-template-rows: 2rem 1rem auto auto;
    grid-template-columns: 5fr 95fr;
    justify-items: start;
    grid-template-areas: "execution_count source" "toolbar source" ". source" "outputs outputs";
    align-items: start;
    justify-items: start;
    width: 95vw;
}

tr.markdown.cell {
    grid-template-columns: 95fr 5fr;
    grid-template-areas: "source toolbar";
}

tr.cell>td.source {
    grid-area: source;
    width: 100%;
    overflow-x: auto;
}

tr.cell>td.cell_type {
    grid-area: cell_type;
}

tr.cell>td.outputs {
    overflow-x: auto;
    grid-area: outputs;
    display: flex;
    flex-direction: column;
    width: 100%;
}

tr.cell>td.toolbar {
    grid-area: toolbar;
}

tr.cell>td.metadata li {
    list-style-type: none;
}

tr.cell>td.execution_count {
    grid-area: execution_count;
}

td.source form textarea {
    width: 100%;
}

td.cell_type,
tr.cell form label.cell_type,
tr.markdown.cell td.outputs,
tr.markdown.cell td.execution_count,
.static td.toolbar,
.static input.run,
.static tr.markdown.cell td.source form textarea {
    display: none;
}

td.source form textarea:focus~.render {
    display: none;
}

/* tr.cell {
    max-width: 90vw;
    overflow-x: auto;
    width: 100%;

}


tr.markdown.cell {
    grid-template-areas: "source";
}

tr.code.cell {
    grid-template-columns: 5em auto;
    grid-template-areas: "execution_count source" "outputs outputs";
}

td.source {
    grid-area: "source";
}

td.outputs {
    grid-area: "outputs";
}

td.execution_count {
    grid-area: "execution_count";
}



td.source textarea {
    width: 100%;
}

td.metadata > button:disabled {
    display: none;
} */

[role="toolbar"] {
    display: flex;
    flex-direction: row-reverse;
    ;
}

[role="tooltip"] {
    visibility: hidden;
}

[aria-describedby]:hover,
[aria-describedby]:focus {
    position: relative;
}

[aria-describedby]:hover+[role="tooltip"],
[aria-describedby]:focus+[role="tooltip"] {
    visibility: visible;
}