{# # a base template for accessible notebook representations.

the base template defines notebook independent components.
an accessible base template provides a substrate to progressively enchance
the notebook experiennce from browse to edit/focus mode.
#}

{%- extends 'semantic-forms/displays.j2.html' -%}
{% from 'celltags.j2' import celltags %}

{%- block header -%}
<!DOCTYPE html>
<html lang="en">

<head>
    {%- block head -%}
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    {# use technique [h25] to provide a title to satisfy [2.4.2A]. #}
    <title>{{title}}</title>
    {# color scheme signals that notebooks can viewed in light and dark mode.
    the html representation is used instead of the css representation so it is immediately avaiable.
    https://css-tricks.com/almanac/properties/c/color-scheme/ #}
    <meta name="color-scheme" content="dark light">

    {# non-html resources, css and javascript, are served as external resources to optimize load times. #}
    <link rel="stylesheet" href="style.css">
    {%- endblock head -%}
    {%- block html_head_js_mathjax -%}{%- endblock html_head_js_mathjax -%}
</head>
{%- endblock header -%}

{% block any_cell %}{{cell_section(cell, loop)}}{% endblock any_cell %}

{% block body_header %}

<body>
    <header id="skip-link" role="group" aria-labelledby="nb-skip-links-label">
        <label aria-hidden="true" id="nb-skip-links-label">skip links</label>
        <ul role="toolbar">
            <li>
                <a href="#cells" tabindex="0" accesskey="1">skip to content</a>
            </li>
            <li>
                <a href="#nb-toc" accesskey="0">table of contents</a>
            </li>
            <li>
            <button onclick="openDialog(this)" data-controls="nb-settings">Settings</button>
            </li>
        </ul>
    </header>
    <header></header>
    <main id=notebook aria-labelledby="nb-title">
        {% block main_header scoped %}
        {% endblock main_header %}
        {% endblock body_header %}

        {% block body_footer %}
        <form name="notebook" aria-labelledby="nb-controls-label">
            <fieldset>
                <legend id="nb-controls-label">Notebook Controls</legend>
                <ul role="toolbar">
                    <li><button type="submit">Run All</button></li>
                </ul>
            </fieldset>
        </form>
        <footer aria-labelledby="nb-toc" role="contentinfo">
            <details open>
                <summary><span id="nb-toc">table of contents</span></summary>
                <header hidden>
                    <i>press</i><a accesskey="." href="#nb-toc"><kbd>.</kbd></a><i id="nb-toc-description">skip to table
                        of contents</i>
                </header>
            </details>
        </footer>
        <footer>
            <dialog>
                <fieldset name="metadata" form="notebook">
                </fieldset>
                <form method="dialog">
                    <button>Close</button>
                </form>
            </dialog>
        </footer>
        <footer>
            <ol id="log" aria-relevant="additions"></ol>
        </footer>
    </main>
    <footer></footer>
    {% include "semantic-forms/settings.html.j2" %}
</body>
<script>
    function setCookie(cname, cvalue, exdays) {
        const d = new Date();
        d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
        let expires = "expires=" + d.toUTCString();
        document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
    }
    function openDialog(x) {
        document.getElementById(x.dataset.controls).showModal();
    };

    function toggleColorScheme(x) {
        let scheme = document.querySelector(`head > meta[name="color-scheme"]`);
        scheme.content = x.value;
        setCookie("colorTheme", x.value, 30);
    }

    function log(x) {
        document.getElementById("log").innerHTML += `<li>${x}</li>`;
    }

    function focusHandler(x) { }
    function keyHandler(x) {
        let parent = x.target.parentNode;
        let toolbar = parent.parentNode;
        let next = null;

        if (x.keyCode == 37) {
            next = parent.previousElementSibling;
        } else if (x.keyCode == 39) {
            next = parent.nextElementSibling;
        }

        if (next) {
            toolbar.querySelectorAll("li").forEach(
                (z) => {
                    let tabindex = z === next ? 0 : -1;
                    let a = z.querySelector(`a, button`);
                    a.setAttribute("tabindex", tabindex);
                    tabindex == 0 ? a.focus() : null;
                }
            )
        }

    }
    function toolbar(x) {
        let tools = x.querySelectorAll("a, button");

        tools.forEach(
            (y, i) => {
                if (!y.hasAttribute("tabindex")) {
                    y.setAttribute("tabindex", i == 0 ? 0 : -1);
                }
                y.addEventListener("keydown", keyHandler);
                y.addEventListener("onfocus", focusHandler);
            });
    }

    document.querySelectorAll("[role=toolbar]").forEach(toolbar)
</script>

</html>
{% endblock body_footer %}


{% macro cell_section(cell, loop) %}
<section class="cell {{cell.cell_type}}" aria-labelledby="cell-{{loop.index}}-cell_type {{loop.index}}"
    data-loc="{{cell.source.splitlines().__len__()}}" {% if cell.cell_type=="code" %}
    data-outputs="{{cell.outputs.__len__()}}" {% endif %}>
    {{cell_anchor(loop.index)}}
    {{cell_form(i)}}
    {{cell_execution_count(loop.index, cell.execution_count)}}
    {{cell_cell_type(loop.index, cell.cell_type)}}
    {{cell_source(loop.index, cell.source, cell.execution_count)}}
    {{cell_output(loop.index, cell, cell.source, cell.outputs, cell.cell_type, cell.execution_count)}}
    {{cell_metadata(loop.index, cell.metadata)}}
</section>
{% endmacro%}

{% macro cell_anchor(i) %}
<a href="#{{i}}" id="{{i}}" aria-labelledby="nb-def-cell {{i}}">{{i}}</a>
{% endmacro %}

{% macro cell_cell_type(i, cell_type) %}
<select form="cell-{{i}}" name="cell_type" disabled>
    <option value="markdown" {%- if cell_type=="markdown" %} selected{% endif%}>markdown</option>
    <option value="code" {%- if cell_type=="code" %} selected{% endif%}>code</option>
    <option value="raw" {%- if cell_type=="raw" %} selected{% endif%}>raw</option>
</select>
<span id="cell-{{i}}-cell_type">{{cell_type}}</span>
{% endmacro %}

{% macro cell_execution_count(i, execution_count) %}
<output form="cell-{{i}}" name="execution_count" id="cell-{{i}}-execution_count">#{{execution_count}}</output>
{% endmacro %}

{% macro cell_form(i) %}
<form id="cell-{{i}}" name="/cells/{{i}}" aria-labelledby="cell-{{i}}-cell_type">
    <button type="submit">Run Cell</button>
</form>
{% endmacro %}

{% macro cell_source(i, source, execution_count) %}
{% set label -%}
In</span><span aria-hidden="true">[</span><span>{{execution_count}}</span><span aria-hidden="true">]</span>
{%- endset %}
<fieldset name="input">
    <legend hidden id="cell-{{i}}-input">
        In {{execution_count}}
    </legend>
    <label aria-hidden="true">{{label}}</label>
    <textarea form="cell-{{i}}" id="cell-{{i}}-source" name="source" rows="{{source.splitlines().__len__()}}"
        aria-labelledby="cell-{{i}}-input">{{source}}</textarea>
    {{markdown("```python\n"+ source + "\n```")}}
</fieldset>
{% endmacro %}

{% macro cell_metadata(i, metadata) %}
<button name="metadata" form="cell-{{i}}">Metadata</button>
<dialog id="cell-{{i}}-metadata">
    <pre><code>
    {{metadata}}
    </code></pre>
    <form method="dialog">
        <button>Close</button>
    </form>
</dialog>
{% endmacro %}

{%- macro cell_output(i, cell, source, outputs, cell_type, execution_count) -%}
{% set CODE = cell_type == "code" %}
{% set label %}{% if CODE and outputs %}Out<span aria-hidden="true">[</span>{{execution_count}}<span
    aria-hidden="true">]</span>{% else %}Cell {{i}}{% endif %}{% endset %}
<span hidden id="cell-{{i}}-outputs-len">{{outputs.__len__()}} outputs</span>
<fieldset name="outputs" id="cell-{{i}}-outputs" aria-describedby="cell-{{i}}-outputs-len">
    <legend hidden>Out {{execution_count}}</legend>
    <label aria-hidden="true" for="cell-{{i}}-outputs">{{label}}</label>
    {% if CODE and outputs %}
    {{cell_display_priority(i, outputs, cell)}}
    {% elif cell_type=="markdown" %}
    {{ markdown(source) | strip_files_prefix }}
    {% endif %}
</fieldset>
{%- endmacro -%}

{#

[h25]: https://www.w3.org/WAI/WCAG21/Techniques/html/H25
[2.4.2A]: https://www.w3.org/WAI/WCAG21/Understanding/page-titled

#}