@import url('https://fonts.googleapis.com/css2?family=Atkinson+Hyperlegible&display=swap');
body {
    /* prefer system fonts https://css-tricks.com/snippets/css/system-font-stack/ */
    /* font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"; */
    font-family: 'Atkinson Hyperlegible';
    font-size: 1.25em;
}

/* we need to visually hide content that may have focus */
.visually-hidden:not(:focus):not(:active) {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
}

a.cell-index:before {
    content: "cell ";
}

header nav li {
    display: flex;
}
a.cell-index:after {
    content: ":";
}


textarea {
    font-family: monospace;
}

main>header details.nav {
    background-color: white;
}

main>header {
    overflow: auto;
    opacity: .9;
}

main > .cells > thead {
    display: none;
}

.static .execution_count label:not(:empty):before {
    content: "In: ";
}

.cells {
    width: 100%;
}

.cell {
    display: grid;
}

.code.cell {
    grid-template-rows: 2rem 1rem auto auto;
    grid-template-columns: 5fr 95fr;
    justify-items: start;
    grid-template-areas: "execution_count source" "toolbar source" ". source" "outputs outputs";
    align-items: start;
    justify-items: start;
    width: 95vw;
}

.markdown.cell {
    grid-template-columns: 95fr 5fr;
    grid-template-areas: "source toolbar";
}

textarea.source {
    grid-area: source;
    width: 100%;
    overflow-x: auto;
}

.cell>.cell_type {
    grid-area: cell_type;
}

.cell>.outputs {
    overflow-x: auto;
    grid-area: outputs;
    display: flex;
    flex-direction: column;
    width: 100%;
}

.cell>.toolbar {
    grid-area: toolbar;
}

.cell>.execution_count {
    grid-area: execution_count;
}

textarea.source {
    width: 100%;
}

.cell_type,
.cell label.cell_type,
.markdown.cell .outputs,
.markdown.cell .execution_count,
.static .toolbar,
.static input.run,
.static .markdown.cell textarea.source,
.markdown fieldset.outputs {
    display: none;
}

.cell textarea.source:focus~.render {
    display: none;
}